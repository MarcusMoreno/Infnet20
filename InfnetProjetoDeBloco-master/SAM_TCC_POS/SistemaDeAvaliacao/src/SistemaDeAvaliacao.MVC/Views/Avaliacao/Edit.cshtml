@model SistemaDeAvaliacao.Application.ViewModel.AvaliacaoViewModel

@{
    ViewBag.Title = "Edit";
}

@{
    ViewBag.Title = "Criar Avaliação";
    ViewBag.Icon = "fa fa-list-ul ";
    ViewBag.PageHeader = "Avaliações";
    ViewBag.PageDescription = "Manutenção do cadastro de Avaliações";
    var breadCrumbArray = new string[] { ViewBag.PageHeader, ViewBag.Title };
    ViewBag.Path = breadCrumbArray;
}

<div class="box box-primary">
    <div class="box-header">
        <h3 class="box-title">@ViewBag.Title</h3>
    </div>
    <div class="box-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger alert-dismissible" })
                @Html.HiddenFor(model => model.AvaliacaoId)

                <div class="form-group">
                    @Html.LabelFor(model => model.CodigoAcesso, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CodigoAcesso, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.CodigoAcesso, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Objetivo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Objetivo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Objetivo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DataInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DataInicio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DataInicio, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DataTermino, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DataTermino, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DataTermino, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Curso, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Curso, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Curso, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TurmaId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TurmaId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TurmaId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Professor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Professor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Professor, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="box box-primary">
                    <div class="box-header">
                        <h3 class="box-title">Selecionar Questões</h3><br />
                        <small>Segure CTRL + clique para selecionar mais de uma questão por categoria, ou para deselecionar uma questão.</small>
                    </div>
                    <div class="box-body">
                        @foreach (var cat in Model.ListaCategorias)
                        {
                            <h4>@cat.Descricao</h4>

                            @Html.ListBoxFor(model => model.IdQuestoesSelecionadas, new MultiSelectList(Model.ListaQuestoes.ToList().Where(q => q.CategoriaId == cat.CategoriaId), "QuestaoId", "Descricao", Model.Questoes.ToList().Where(q => q.CategoriaId == cat.CategoriaId).Select(q => q.QuestaoId)), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdQuestoesSelecionadas, "", new { @class = "text-danger" })
                        }
                    </div>
                </div>
                <div class="box-footer">
                    <div class="form-group text-right">
                        @Html.ActionLink("Cancelar", "Details", new { @id = Model.AvaliacaoId }, new { @class = "btn btn-default" })
                        <input type="submit" value="Salvar" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>



<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
