@model SistemaDeAvaliacao.Application.ViewModel.ResponderAvaliacaoViewModel

@{
    Layout = "~/Views/Shared/_LayoutAdminLTEAvaliacao.cshtml";
}

@{
    ViewBag.Title = "Dados da Avaliação";
}

<div class="box box-primary">
    <div class="box-header">
        <h3 class="box-title">@ViewBag.Title</h3>
    </div>
    <div class="box-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger alert-dismissible" })
                @Html.HiddenFor(model => model.AvaliacaoId)
                @Html.HiddenFor(model => model.CodigoAcesso)
                <div class="col-md-6">

                    <div class="form-group">
                        @Html.LabelFor(model => model.NomeAluno, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NomeAluno, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.NomeAluno, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MatriculaAluno, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MatriculaAluno, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.MatriculaAluno, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TurmaId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TurmaId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.TurmaId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Curso, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Curso, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Curso, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Professor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Professor, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Professor, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Objetivo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Objetivo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Objetivo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DataInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DataInicio, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.DataInicio, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DataTermino, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DataTermino, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.DataTermino, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-12 ">
                    <div class="progress">
                        <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width: 17%;">17%</div>
                    </div>

                    @for (int i = 0; i < Model.AvaliacaoRespostas.Count(); i++)
                    {
                        for (int j = 0; j < Model.Questoes.Where(q => q.QuestaoId == Model.AvaliacaoRespostas[i].QuestaoId).Count(); j++)
                        {
                            <div class="step well">
                                <h4>@Model.Questoes[i].Descricao</h4>
                                <br />
                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.HiddenFor(model => model.AvaliacaoRespostas[i].QuestaoId)
                                        @*@Html.DropDownListFor(model => model.AvaliacaoRespostas[i].Resposta, new SelectList(Model.OpcoesResposta, "OpcaoRespostaId", "Descricao"), "Selecionar", new { htmlAttributes = new { @class = "form-control" } })*@


                                        @for (int k = 0; k < Model.OpcoesResposta.Count(); k++)
                                        {
                                            @Html.RadioButtonFor(model => model.AvaliacaoRespostas[i].Resposta, Model.OpcoesResposta[k].OpcaoRespostaId, new { @class = "iCheck-helper" })
                                            <label style="margin: 0 35px 0 5px;" for="@Model.AvaliacaoRespostas[i].Resposta">@Model.OpcoesResposta[k].Descricao</label>
                                        }
                                        @Html.ValidationMessageFor(model => model.AvaliacaoRespostas[i].Resposta, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        }
                    }

                    <a class="action back btn btn-default" style="display: none;">Anterior</a>
                    <a class="action next btn btn-primary" style="display: inline-block;">Próxima</a>
                    @*<a class="action submit btn btn-success" style="display: none;">Enviar</a>*@
                    <input type="submit" value="Enviar" class="action submit btn btn-success" style="display: none;" />
                    <p class="action submit text-warning">Para enviar suas respostas agora, pressione <b>ENVIAR</b>. Caso queira revisar suas respostas, clique em <b>ANTERIOR</b>.</p>
                </div>



                @*<div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>*@
            </div>
        }
    </div>
</div>
@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}

