@model InfnetMovieDataBase.Domain.Filme

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Filme</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Titulo" class="control-label"></label>
                <input asp-for="Titulo" class="form-control" />
                <span asp-validation-for="Titulo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TituloOriginal" class="control-label"></label>
                <input asp-for="TituloOriginal" class="form-control" />
                <span asp-validation-for="TituloOriginal" class="text-danger"></span>
            </div>
            @*@for (int i = 0; i < Model.Atores.Count; i++)
            {
                <tr>
                    @Model.Atores.Count
                    <td class="editor-field">
                        @Html.EditorFor(model => model.Atores[i].Nome)
                    </td>


                    <td class="editor-field">
                        @Html.EditorFor(model => model.Atores[i].Sobrenome)
                        @Html.ValidationMessageFor(model => model.Atores[i].Sobrenome)
                    </td>

                </tr>
            }*@
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                @Html.ActionLink("Back", "Index", "Filme", null, new { @class = "btn btn-secondary" })
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
